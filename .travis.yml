# Copyright (c) 2020 Red Hat, Inc.

os:
  - linux

language: go
go:
  - 1.13.x

services:
  - docker

addons:
  sonarcloud:
    organization: "open-cluster-management"
    token:
      secure: "c5DrNGir5MkcUOy9Tp2u4BLIt15t51HDzoGTKISB5Ij6Ok6ktPp0lVvXQPGkiyFAYkRcOWfgPrrUyK83i8SZHTQTPhgW/3ZJ50vroEWvljUSw3BBm7eNIJgqNRJNdgqZrRLPF7G1rV1CpnKwCfXjT04kGnsgzA4mi0RzymgvrRsh3h795X23pSoIODnbnIlxivqfle5yjTAt2ZGBm+8wmW5x70/0NlsysPE1RFtvcvVD8bFWK+6NI6M0x1NXZKg/3c7W9Bm6GkcrdP0OdRYPSQtAofv1xgqcYBNxy2taX5ir8pEWyeerRd3zJpdPy+VmZNut6Pl/pHuqedGun4hynTR/yiKvdmGB5W3sKf6nSunVmld4lTFKmKA9xygl1XGy9aMa8FJYhhCe7HkVpwN8Gq6vbGgcYf8EfOPs2c1ckS8Ff3ZvuiXqxr/TWAOXiUpjv34gexNDC5UZroIJfozBsQcnbjn+oVkRSMB4I8+LwhHIWbbSjZtXwW/MBhOy3sFVbP6uv/nCC1u1exkUl+mu6JwaCRdWzIUfGkEW/56y9RumYlcoC2Xo9yLbD/oRnE0lvapa1B4TvNm6dPfNWo2xzrf0lvW28Vj3UCxSc+3Vo4N+QqCIsX9k0xZTLCFADB8Sw/zSYf/r439aj5u8tjKomOZvNIKB5cNOYKaGbrOTWu4="

branches:
  only:
    - main
    - /^release-[0-9]+\..*$/

env:
  global:
    # Required
    - OS=linux
    - COMPONENT_TAG_EXTENSION="-${TRAVIS_COMMIT}"

    # Component Specific 
    - COMPONENT_DEPLOY_COMMAND=${TRAVIS_BUILD_DIR}/cicd-scripts/deploy-to-cluster.sh
    - COMPONENT_INIT_COMMAND=${TRAVIS_BUILD_DIR}/cicd-scripts/install-dependencies.sh
    - COMPONENT_BUILD_COMMAND=${TRAVIS_BUILD_DIR}/cicd-scripts/build.sh
    - COMPONENT_UNIT_TEST_COMMAND=${TRAVIS_BUILD_DIR}/cicd-scripts/run-unit-tests.sh
    - COMPONENT_E2E_TEST_COMMAND=${TRAVIS_BUILD_DIR}/cicd-scripts/run-e2e-tests.sh

    - GO111MODULE=on

stages:
  - build
  - unit-test
  - test-e2e
  - release-ff
  - publish

before_script:
  # Bootstrap the build harness.
  - make init
  # Set the image tag differently for PRs.
  - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then export COMPONENT_TAG_EXTENSION="-PR${TRAVIS_PULL_REQUEST}-${TRAVIS_COMMIT}"; fi;
  # Use ssh to pull from private repos.
  - git config --global url."git@github.com:".insteadOf "https://github.com/"

jobs:
  include:
    - stage: build
      name: "Build the test image, push it, check potential leaked credentials and check image security scan status"
      script:
        - make component/build
        - make component/push
        - make security/scans
    - stage: unit-test
      name: "Run unit tests"
      script:
        # Set the image tag differently for PRs
        # Bootstrap the build harness, pull test image, and run unit tests.   
        - make component/pull
        - make component/test/unit
        # - make sonar/go
        # sonar-scanner --debug
    - stage: test-e2e
      name: "Deploy the image to a cluster and run e2e tests"
      script:
        #Check out a clusterpool, set up oc, deploy, run e2e tests, and return clusterpool cluster 
        - make component/pull
        - make component/test/e2e
    - stage: release-ff
      name: "Push commits from main to branch defined in RELEASE_FF_BRANCH"
      if: type = push AND branch =~ /^main$/
      script:
        - make release-ff
    - stage: publish
      name: "Publish the image to quay with an official version/sha tag and publish entry to integration pipeline stage"
      if: type = push AND branch =~ /^release-[0-9]+\..*$/
      script:
        - make pipeline-manifest/update PIPELINE_MANIFEST_COMPONENT_SHA256=${TRAVIS_COMMIT} PIPELINE_MANIFEST_COMPONENT_REPO=${TRAVIS_REPO_SLUG} PIPELINE_MANIFEST_BRANCH=${TRAVIS_BRANCH}
